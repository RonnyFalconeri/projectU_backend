openapi: 3.0.1
info:
  title: projectU REST API
  description: A REST API for the application projectU
  version: 1.0.0

paths:
  /projects:
    get:
      summary: Get all projects
      description: Returns every Project
      operationId: getAllProjects
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
                  
    post:
      summary: Create new project
      operationId: createProject
      requestBody:
        description: Creates a new project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        201:
          description: Project created
          headers:
            Location:
              schema:
                type: string
                format: uri
            Content-Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          links:
            getProjectById:
              operationId: getProjectById
              parameters:
                id: '$response.body#/id'
                
  /projects/{id}:
    get:
      summary: Get project by id
      description: Returns a single project
      operationId: getProjectById
      parameters:
      - name: id
        in: path
        description: ID of project to return
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
                
    post:
      summary: Updates a project
      operationId: updateProject
      parameters:
      - name: id
        in: path
        description: ID of project to be updated
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        201:
          description: Project updated
          headers:
            Location:
              schema:
                type: string
                format: uri
            Content-Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          links:
            getProjectById:
              operationId: getProjectById
              parameters:
                id: '$response.body#/id'
                
    delete:
      summary: Deletes a project
      operationId: deleteProject
      parameters:
      - name: id
        in: path
        description: Project id to delete
        required: true
        schema:
          type: string
      responses:
        204:
          description: Project successfully deleted
  
components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        state:
          $ref: '#/components/schemas/State'
        complexity:
          $ref: '#/components/schemas/Complexity'
        estimatedDurationInHours:
          type: integer
        expectedResult:
          type: string
        actualResult:
          type: string
        createdAt:
          type: string
        startedAt:
          type: string
        finishedAt:
          type: string
          
    Task:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        state:
          $ref: '#/components/schemas/State'
        complexity:
          $ref: '#/components/schemas/Complexity'
        estimatedDurationInHours:
          type: integer
        result:
          type: string
          
    State:
      type: string
      enum:
        - INITIATED
        - IN_PROGRESS
        - HALTED
        - FINISHED
        
    Complexity:
      type: string
      enum:
        - EASY
        - MEDIUM
        - DIFFICULT
